{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{CVi5:function(e,t,r){\"use strict\";r.r(t),t.default=\":host ::ng-deep .tabset1 a.nav-link {\\r\\n    color: #5f6971;\\r\\n  }\\r\\n  :host ::ng-deep .tabset1 a.nav-link:hover{\\r\\n   \\r\\n    color: #08a1a1;\\r\\n  }\\r\\n  :host ::ng-deep .tabset1 a.nav-link.active {\\r\\n    color: #5f6971 ;\\r\\n    font-weight: 700;\\r\\n    font-size: 14px;\\r\\n    background-color: #f1f5f8;\\r\\n    border-top:2px solid #08a1a1;\\r\\n    border: 0px 1px 0px 1px solid #cacaca;\\r\\n  }\\r\\n  :host ::ng-deep.tab-content > .active {\\r\\n    display: block;\\r\\n     background-color:#f1f5f8; \\r\\n    border-top: none;\\r\\n} \\r\\n\"},TxqD:function(e,t,r){\"use strict\";r.r(t),t.default='<div class=\"row\">\\r\\n  <div class=\"col-md-12\">\\r\\n    <div class=\"card\" style=\"padding-top: 28px;\">\\r\\n\\r\\n      <ngb-tabset class=\"tabset1\" #t=\"ngbTabset\">\\r\\n\\r\\n        <ngb-tab id=\"tab-ElnProgramcode\" title=\"Program Code\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\"col-md-6\">\\r\\n              <div class=\"row\">\\r\\n                <div class=\"col-md-3\">\\r\\n                  <div class=\"\">\\r\\n                    <div class=\"\">\\r\\n                      <div class=\"mr-2\">\\r\\n                        <div class=\"custom-control custom-checkbox\" *ngIf=\"PageAccessRight.HasWriteAccess\">\\r\\n                          <button type=\"submit\" class=\"addbtn_style\" ejs-button\\r\\n                            (click)=\"openModal(addProgramcodeModal)\">\\r\\n                            Add\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-template #addProgramcodeModal let-modal>\\r\\n              <div class=\"modal_header\">\\r\\n                <div class=\"col-md-12\">\\r\\n                  <div class=\"row\">\\r\\n                    <div class=\"col-md-6\">\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"!IsEditMode\">Add Program code</h5>\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"IsEditMode\">Edit Program code</h5>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6\" class=\"Close_Popup\">\\r\\n                      <i class=\"fas fa-times\" (click)=\"modal.dismiss(\\'Cross click\\')\"></i>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\"modal-body\">\\r\\n                <form class=\"form-horizontal\" [formGroup]=\\'ProgramCodeForm\\' autocomplete=\"off\">\\r\\n                  <div class=\"form-group row\">\\r\\n\\r\\n                    <label for=\"Programcode\" class=\"col-sm-4 control-label col-form-label\">Program Code:\\r\\n                      <span class=\"text-danger\">*</span>\\r\\n                    </label>\\r\\n                    <div class=\"col-sm-8\" print-error [control]=\"ProgramCodeForm.get(\\'ProgramCode\\')\">\\r\\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Enter Program code\" name=\"ProgramCode\"\\r\\n                        formControlName=\"ProgramCode\" />\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\"modal-footer\">\\r\\n                <button class=\"addmodal_style\" *ngIf=\"!IsEditMode\" (click)=\"SaveProgramCode()\" ejs-button>\\r\\n                  Add\\r\\n                </button>\\r\\n                <button class=\"addmodal_style\" *ngIf=\"IsEditMode\" (click)=\"UpdateProgramCode()\" ejs-button>\\r\\n                  Update\\r\\n                </button>\\r\\n                <button class=\"cancel_style\" (click)=\"modal.close(\\'Close click\\')\" ejs-button>\\r\\n                  cancel\\r\\n                </button>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <div class=\"table-responsive setting_table\" style=\"padding-left: 30%;\">\\r\\n              <ejs-grid #grid id=\"Grid\" [dataSource]=\"ProgramCodeList\" allowFiltering=\"true\" [allowPaging]=\\'true\\'\\r\\n                [pageSettings]=\\'pageSettings\\' [filterSettings]=\"filterOptions\" [gridLines]=\"lines\" [toolbar]=\"toolbar\"\\r\\n                height=\"300px\" width=60% (commandClick)=\"EditProgramCode($event);openModal(addProgramcodeModal)\">\\r\\n                <e-columns>\\r\\n                  <e-column headerText=\\'Action\\' textAlign=\\'center\\' [visible]=\\'IsVisible\\' [commands]=\"commands\"\\r\\n                    width=\\'10\\'></e-column>\\r\\n                  <e-column field=\"Name\" headerText=\"Program Code\" headerTextAlign=\\'center\\' textAlign=\\'left\\'\\r\\n                    isPrimaryKey=\"true\" width=\"20\">\\r\\n                  </e-column>\\r\\n                </e-columns>\\r\\n              </ejs-grid>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab id=\"tab-ElnSampleBarcode\" title=\"Sample Barcode\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\"col-md-6\">\\r\\n              <div class=\"row\">\\r\\n                <div class=\"col-md-3\">\\r\\n                  <div class=\"\">\\r\\n                    <div class=\"\">\\r\\n                      <div class=\"mr-2\">\\r\\n                        <div class=\"custom-control custom-checkbox\" *ngIf=\"PageAccessRight.HasWriteAccess\">\\r\\n                          <button type=\"submit\" class=\"addbtn_style\" ejs-button\\r\\n                            (click)=\"openModal(addSampleBarcodeModal)\">\\r\\n                            Add\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-template #addSampleBarcodeModal let-modal>\\r\\n              <div class=\"modal_header\">\\r\\n                <div class=\"col-md-12\">\\r\\n                  <div class=\"row\">\\r\\n                    <div class=\"col-md-6\">\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"!IsEditMode\">Add Sample Barcode Id</h5>\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"IsEditMode\">Edit Sample Barcode Id</h5>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6\" class=\"Close_Popup\">\\r\\n                      <i class=\"fas fa-times\" (click)=\"modal.dismiss(\\'Cross click\\')\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\"modal-body\">\\r\\n                <form class=\"form-horizontal\" [formGroup]=\\'SampleBarcodeForm\\' autocomplete=\"off\">\\r\\n                  <div class=\"form-group row\">\\r\\n                    <label for=\"SampleBarcodeId\" class=\"col-sm-4 control-label col-form-label\">\\r\\n                      Sample Barcode Id:<span class=\"text-danger\">*</span>\\r\\n                    </label>\\r\\n                    <div class=\"col-sm-8\" print-error [control]=\"SampleBarcodeForm.get(\\'SampleBarcodeId\\')\">\\r\\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Enter Sample Barcode Id\"\\r\\n                        name=\"SampleBarcodeId\" formControlName=\"SampleBarcodeId\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\"modal-footer\">\\r\\n                <button class=\"addmodal_style\" *ngIf=\"!IsEditMode\" (click)=\"SaveSampleBarcode()\" ejs-button>\\r\\n                  Add\\r\\n                </button>\\r\\n                <button class=\"addmodal_style\" *ngIf=\"IsEditMode\" (click)=\"UpdateSampleBarcode()\" ejs-button>\\r\\n                  Update\\r\\n                </button>\\r\\n                <button class=\"cancel_style\" (click)=\"modal.close(\\'Close click\\')\" ejs-button>\\r\\n                  cancel\\r\\n                </button>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <div class=\"table-responsive setting_table\" style=\"padding-left: 30%\">\\r\\n              <ejs-grid #grid1 id=\"Grid1\" [dataSource]=\"SampleBarcodeList\" [columns]=\"columns\"\\r\\n                [showColumnChooser]=\"true\" allowFiltering=\"true\" [filterSettings]=\"filterOptions\" [gridLines]=\"lines\"\\r\\n                [allowPaging]=\\'true\\' [pageSettings]=\\'pageSettings\\' [toolbar]=\"toolbar\" height=\"300px\" width=60%\\r\\n                (commandClick)=\"EditSampleBarcode($event);openModal(addSampleBarcodeModal)\">\\r\\n                <e-columns>\\r\\n                  <e-column headerText=\\'Action\\' textAlign=\\'center\\' [visible]=\\'IsVisible\\' [commands]=\"commands\"\\r\\n                    width=\\'20\\'></e-column>\\r\\n                  <e-column field=\"Name\" headerText=\"Sample Barcode\" isPrimaryKey=\"true\" headerTextAlign=\\'center\\'\\r\\n                    textAlign=\\'left\\' width=\"50\">\\r\\n                  </e-column>\\r\\n                </e-columns>\\r\\n              </ejs-grid>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab id=\"tab-ElnTestMaterial\" title=\"Test Material\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\"col-md-6\">\\r\\n              <div class=\"row\">\\r\\n                <div class=\"col-md-3\">\\r\\n                  <div class=\"\">\\r\\n                    <div class=\"\">\\r\\n                      <div class=\"mr-2\">\\r\\n                        <div class=\"custom-control custom-checkbox\" *ngIf=\"PageAccessRight.HasWriteAccess\">\\r\\n                          <button type=\"submit\" class=\"addbtn_style\" ejs-button\\r\\n                            (click)=\"openModal(addTestMaterialModal)\">\\r\\n                            Add\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-template #addTestMaterialModal let-modal>\\r\\n              <div class=\"modal_header\">\\r\\n                <div class=\"col-md-12\">\\r\\n                  <div class=\"row\">\\r\\n                    <div class=\"col-md-6\">\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"!IsEditMode\">Add Test Material Id</h5>\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"IsEditMode\">Edit Test Material Id</h5>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6\" class=\"Close_Popup\">\\r\\n                      <i class=\"fas fa-times\" (click)=\"modal.dismiss(\\'Cross click\\')\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\"modal-body\">\\r\\n                <form class=\"form-horizontal\" [formGroup]=\\'TestMaterialForm\\' autocomplete=\"off\">\\r\\n                  <div class=\"form-group row\">\\r\\n                    <label for=\"TestMaterialId\" class=\"col-sm-4 control-label col-form-label\">\\r\\n                      Sample Barcode Id:<span class=\"text-danger\">*</span>\\r\\n                    </label>\\r\\n                    <div class=\"col-sm-8\" print-error [control]=\"TestMaterialForm.get(\\'TestMaterialId\\')\">\\r\\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Enter Test Material Id\" name=\"TestMaterialId\"\\r\\n                        formControlName=\"TestMaterialId\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\"modal-footer\">\\r\\n                <button class=\"addmodal_style\" *ngIf=\"!IsEditMode\" (click)=\"SaveTestMaterial()\" ejs-button>\\r\\n                  Add\\r\\n                </button>\\r\\n                <button class=\"addmodal_style\" *ngIf=\"IsEditMode\" (click)=\"UpdateTestMaterial()\" ejs-button>\\r\\n                  Update\\r\\n                </button>\\r\\n                <button class=\"cancel_style\" (click)=\"modal.close(\\'Close click\\')\" ejs-button>\\r\\n                  cancel\\r\\n                </button>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <div class=\"table-responsive setting_table\" style=\"padding-left: 30%\">\\r\\n              <ejs-grid #grid1 id=\"Grid1\" [dataSource]=\"TestMaterialList\" [columns]=\"columns\" [showColumnChooser]=\"true\"\\r\\n                allowFiltering=\"true\" [filterSettings]=\"filterOptions\" [gridLines]=\"lines\" [allowPaging]=\\'true\\'\\r\\n                [pageSettings]=\\'pageSettings\\' [toolbar]=\"toolbar\" height=\"300px\" width=60%\\r\\n                (commandClick)=\"EditTestMaterial($event);openModal(addTestMaterialModal)\">\\r\\n                <e-columns>\\r\\n                  <e-column headerText=\\'Action\\' textAlign=\\'center\\' [visible]=\\'IsVisible\\' [commands]=\"commands\"\\r\\n                    width=\\'20\\'></e-column>\\r\\n                  <e-column field=\"Name\" headerText=\"Test Material\" isPrimaryKey=\"true\" headerTextAlign=\\'center\\'\\r\\n                    textAlign=\\'left\\' width=\"50\">\\r\\n                  </e-column>\\r\\n                </e-columns>\\r\\n              </ejs-grid>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab id=\"tab-ElnTestType\" title=\"Test Type\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\"col-md-6\">\\r\\n              <div class=\"row\">\\r\\n                <div class=\"col-md-3\">\\r\\n                  <div class=\"\">\\r\\n                    <div class=\"\">\\r\\n                      <div class=\"mr-2\">\\r\\n                        <div class=\"custom-control custom-checkbox\" *ngIf=\"PageAccessRight.HasWriteAccess\">\\r\\n                          <button type=\"submit\" class=\"addbtn_style\" ejs-button\\r\\n                            (click)=\"openModal(addTestTypeModal)\">\\r\\n                            Add\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-template #addTestTypeModal let-modal>\\r\\n              <div class=\"modal_header\">\\r\\n                <div class=\"col-md-12\">\\r\\n                  <div class=\"row\">\\r\\n                    <div class=\"col-md-6\">\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"!IsEditMode\">Add Test Type Id</h5>\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"IsEditMode\">Edit Test Type Id</h5>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6\" class=\"Close_Popup\">\\r\\n                      <i class=\"fas fa-times\" (click)=\"modal.dismiss(\\'Cross click\\')\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\"modal-body\">\\r\\n                <form class=\"form-horizontal\" [formGroup]=\\'TestTypeForm\\' autocomplete=\"off\">\\r\\n                  <div class=\"form-group row\">\\r\\n                    <label for=\"TestTypeId\" class=\"col-sm-4 control-label col-form-label\">\\r\\n                      Test Type Id:<span class=\"text-danger\">*</span>\\r\\n                    </label>\\r\\n                    <div class=\"col-sm-8\" print-error [control]=\"TestTypeForm.get(\\'TestTypeId\\')\">\\r\\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Enter Test Material Id\" name=\"TestTypeId\"\\r\\n                        formControlName=\"TestTypeId\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\"modal-footer\">\\r\\n                <button class=\"addmodal_style\" *ngIf=\"!IsEditMode\" (click)=\"SaveTestType()\" ejs-button>\\r\\n                  Add\\r\\n                </button>\\r\\n                <button class=\"addmodal_style\" *ngIf=\"IsEditMode\" (click)=\"UpdateTestType()\" ejs-button>\\r\\n                  Update\\r\\n                </button>\\r\\n                <button class=\"cancel_style\" (click)=\"modal.close(\\'Close click\\')\" ejs-button>\\r\\n                  cancel\\r\\n                </button>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <div class=\"table-responsive setting_table\" style=\"padding-left: 30%\">\\r\\n              <ejs-grid #grid1 id=\"Grid1\" [dataSource]=\"TestTypeList\" [columns]=\"columns\" [showColumnChooser]=\"true\"\\r\\n                allowFiltering=\"true\" [filterSettings]=\"filterOptions\" [gridLines]=\"lines\" [allowPaging]=\\'true\\'\\r\\n                [pageSettings]=\\'pageSettings\\' [toolbar]=\"toolbar\" height=\"300px\" width=60%\\r\\n                (commandClick)=\"EditTestType($event);openModal(addTestTypeModal)\">\\r\\n                <e-columns>\\r\\n                  <e-column headerText=\\'Action\\' textAlign=\\'center\\' [visible]=\\'IsVisible\\' [commands]=\"commands\"\\r\\n                    width=\\'20\\'></e-column>\\r\\n                  <e-column field=\"Name\" headerText=\"Test Type\" isPrimaryKey=\"true\" headerTextAlign=\\'center\\'\\r\\n                    textAlign=\\'left\\' width=\"50\">\\r\\n                  </e-column>\\r\\n                </e-columns>\\r\\n              </ejs-grid>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab id=\"tab-ElnType\" title=\"Type\">\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class=\"col-md-6\">\\r\\n              <div class=\"row\">\\r\\n                <div class=\"col-md-3\">\\r\\n                  <div class=\"\">\\r\\n                    <div class=\"\">\\r\\n                      <div class=\"mr-2\">\\r\\n                        <div class=\"custom-control custom-checkbox\" *ngIf=\"PageAccessRight.HasWriteAccess\">\\r\\n                          <button type=\"submit\" class=\"addbtn_style\" ejs-button\\r\\n                            (click)=\"openModal(addTypeModal)\">\\r\\n                            Add\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <ng-template #addTypeModal let-modal>\\r\\n              <div class=\"modal_header\">\\r\\n                <div class=\"col-md-12\">\\r\\n                  <div class=\"row\">\\r\\n                    <div class=\"col-md-6\">\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"!IsEditMode\">Add Type Id</h5>\\r\\n                      <h5 class=\"modal-title\" *ngIf=\"IsEditMode\">Edit Type Id</h5>\\r\\n                    </div>\\r\\n                    <div class=\"col-md-6\" class=\"Close_Popup\">\\r\\n                      <i class=\"fas fa-times\" (click)=\"modal.dismiss(\\'Cross click\\')\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\"modal-body\">\\r\\n                <form class=\"form-horizontal\" [formGroup]=\\'TypeForm\\' autocomplete=\"off\">\\r\\n                  <div class=\"form-group row\">\\r\\n                    <label for=\"TypeId\" class=\"col-sm-4 control-label col-form-label\">\\r\\n                      Type Id:<span class=\"text-danger\">*</span>\\r\\n                    </label>\\r\\n                    <div class=\"col-sm-8\" print-error [control]=\"TypeForm.get(\\'TypeId\\')\">\\r\\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Enter Type Id\" name=\"TypeId\"\\r\\n                        formControlName=\"TypeId\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n              <div class=\"modal-footer\">\\r\\n                <button class=\"addmodal_style\" *ngIf=\"!IsEditMode\" (click)=\"SaveType()\" ejs-button>\\r\\n                  Add\\r\\n                </button>\\r\\n                <button class=\"addmodal_style\" *ngIf=\"IsEditMode\" (click)=\"UpdateType()\" ejs-button>\\r\\n                  Update\\r\\n                </button>\\r\\n                <button class=\"cancel_style\" (click)=\"modal.close(\\'Close click\\')\" ejs-button>\\r\\n                  cancel\\r\\n                </button>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <div class=\"table-responsive setting_table\" style=\"padding-left: 30%\">\\r\\n              <ejs-grid #grid1 id=\"Grid1\" [dataSource]=\"TypeList\" [columns]=\"columns\" [showColumnChooser]=\"true\"\\r\\n                allowFiltering=\"true\" [filterSettings]=\"filterOptions\" [gridLines]=\"lines\" [allowPaging]=\\'true\\'\\r\\n                [pageSettings]=\\'pageSettings\\' [toolbar]=\"toolbar\" height=\"300px\" width=60%\\r\\n                (commandClick)=\"EditType($event);openModal(addTypeModal)\">\\r\\n                <e-columns>\\r\\n                  <e-column headerText=\\'Action\\' textAlign=\\'center\\' [visible]=\\'IsVisible\\' [commands]=\"commands\"\\r\\n                    width=\\'20\\'></e-column>\\r\\n                  <e-column field=\"Name\" headerText=\"Type\" isPrimaryKey=\"true\" headerTextAlign=\\'center\\'\\r\\n                    textAlign=\\'left\\' width=\"50\">\\r\\n                  </e-column>\\r\\n                </e-columns>\\r\\n              </ejs-grid>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n      </ngb-tabset>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>'},qjCk:function(e,t,r){\"use strict\";r.r(t);var s=r(\"CcnG\"),o=r(\"Ip0R\"),n=r(\"ZYCi\"),a=r(\"22mB\"),i=r(\"4GxJ\"),l=r(\"gIcY\"),d=r(\"SZbH\"),c=r(\"HNZf\"),p=r(\"teG2\"),m=r(\"t/Na\"),u=r(\"AytR\"),g=function(e,t,r,s){var o,n=arguments.length,a=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,s);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(n<3?o(a):n>3?o(t,r,a):o(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a},h=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},v=function(){function e(e,t){this._http=e,this._toastr=t,this._urlELNUserSetting=u.a.apiUrl+\"/api/QCELNUserSetting/\"}return e.prototype.getAccessRight=function(){return this._http.get(this._urlELNUserSetting+\"GetAccessRight\")},e.prototype.GetProgramCode=function(){return this._http.get(this._urlELNUserSetting+\"GetProgramCode\")},e.prototype.SaveProgramCode=function(e){return this._http.post(this._urlELNUserSetting+\"SaveProgramCode\",e)},e.prototype.GetProgramCodeDetail=function(e){return this._http.post(this._urlELNUserSetting+\"GetProgramCodeDetail/\"+e,e)},e.prototype.UpdateProgramCode=function(e){return this._http.post(this._urlELNUserSetting+\"UpdateProgramCode\",e)},e.prototype.SaveSampleBarcode=function(e){return this._http.post(this._urlELNUserSetting+\"SaveSampleBarcode\",e)},e.prototype.UpdateSampleBarcode=function(e){return this._http.post(this._urlELNUserSetting+\"UpdateSampleBarcode\",e)},e.prototype.GetSampleBarcodeId=function(){return this._http.get(this._urlELNUserSetting+\"GetSampleBarcode\")},e.prototype.GetSampleBarcodeDetail=function(e){var t=new m.HttpParams;return t=t.append(\"RecordId\",e.toString()),this._http.get(this._urlELNUserSetting+\"GetSampleBarcodeDetails\",{params:t})},e.prototype.SaveTestMaterial=function(e){return this._http.post(this._urlELNUserSetting+\"SaveTestMaterialId\",e)},e.prototype.UpdateTestMaterial=function(e){return this._http.post(this._urlELNUserSetting+\"UpdateTestMaterial\",e)},e.prototype.GetTestMaterial=function(){return this._http.get(this._urlELNUserSetting+\"GetTestMaterialId\")},e.prototype.GetTestMaterialDetail=function(e){var t=new m.HttpParams;return t=t.append(\"RecordId\",e.toString()),this._http.get(this._urlELNUserSetting+\"GetTestMateriaDetail\",{params:t})},e.prototype.SaveTestType=function(e){return this._http.post(this._urlELNUserSetting+\"SaveTestTypeId\",e)},e.prototype.UpdateTestType=function(e){return this._http.post(this._urlELNUserSetting+\"UpdateTestTypeId\",e)},e.prototype.GetTestType=function(){return this._http.get(this._urlELNUserSetting+\"GetTestTypeId\")},e.prototype.GetTestTypeDetail=function(e){var t=new m.HttpParams;return t=t.append(\"RecordId\",e.toString()),this._http.get(this._urlELNUserSetting+\"GetTestTypeDetail\",{params:t})},e.prototype.SaveType=function(e){return this._http.post(this._urlELNUserSetting+\"SaveTypeId\",e)},e.prototype.UpdateType=function(e){return this._http.post(this._urlELNUserSetting+\"UpdateTypeId\",e)},e.prototype.GetType=function(){return this._http.get(this._urlELNUserSetting+\"GetTypeId\")},e.prototype.GetTypeDetail=function(e){var t=new m.HttpParams;return t=t.append(\"RecordId\",e.toString()),this._http.get(this._urlELNUserSetting+\"GetTypeDetail\",{params:t})},e.ctorParameters=function(){return[{type:m.HttpClient},{type:d.b}]},e=g([Object(s.Injectable)({providedIn:\"root\"}),h(\"design:paramtypes\",[m.HttpClient,d.b])],e)}(),f=function(e,t,r,s){var o,n=arguments.length,a=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,s);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(n<3?o(a):n>3?o(t,r,a):o(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a},y=function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},b=function(e){return e&&e.__esModule?e:{default:e}},T=function(){function e(e,t,r,s,o,n){this.modalService=e,this._toastr=t,this.formBuilder=r,this.formErrorDisplay=s,this.confirmationDialogService=o,this._UserSettingService=n,this.IsEditMode=!1,this.IsVisible=!0,this.PageAccessRight={}}return e.prototype.ngOnInit=function(){var e=this;this._UserSettingService.getAccessRight().subscribe((function(t){e.PageAccessRight=t.Object,0==e.PageAccessRight.HasWriteAccess&&(e.grid.hideColumns([\"Action\"]),e.IsVisible=!1)})),this.SetProgranCodeForm(),this.GetProgramCode(),this.SetSampleBarcodeForm(),this.GetSampleBarcodeList(),this.SetTestMaterialForm(),this.GetTestMaterialList(),this.SetTestTypeForm(),this.GetTestTypeList(),this.SetTypeForm(),this.GetTypeList(),this.pageSettings={pageSizes:10},this.commands=[{type:\"Edit\",buttonOption:{iconCss:\" fa fa-edit\",cssClass:\"e-flat\"}}],this.toolbar=[\"Search\"],this.groupOptions={showGroupedColumn:!0},this.lines=\"Both\",this.filterOptions={type:\"Menu\"}},e.prototype.closeModal=function(){this.modalService.dismissAll()},e.prototype.openModal=function(e){this.resetSampleBarcodeForm(),this.IsEditMode=!1,this.modalService.open(e,{centered:!0,size:\"lg\",backdrop:\"static\",keyboard:!1}).result.then()},e.prototype.resetProgramCodeForm=function(){this.ProgramCodeForm.reset()},e.prototype.SetProgranCodeForm=function(){this.ProgramCodeForm=this.formBuilder.group({ProgramCodeId:[\"\"],ProgramCode:[\"\",l.l.required]})},e.prototype.GetProgramCode=function(){var e=this;this._UserSettingService.GetProgramCode().subscribe((function(t){e.ProgramCodeList=t.Object}))},e.prototype.SaveProgramCode=function(){var e=this;this.ProgramCodeForm.valid?this._UserSettingService.SaveProgramCode(this.ProgramCodeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetProgramCodeForm(),e.GetProgramCode(),e.closeModal()):e._toastr.error(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.ProgramCodeForm)},e.prototype.EditProgramCode=function(e){var t=this;this._UserSettingService.GetProgramCodeDetail(e.rowData.Id).subscribe((function(e){var r=e.Object;null!=r?(t.ProgramCodeForm.patchValue({ProgramCodeId:r.Id,ProgramCode:r.Name}),t.IsEditMode=!0):t.ProgramCodeForm.patchValue({ProgramCodeId:null,ProgramCode:null})}))},e.prototype.UpdateProgramCode=function(){var e=this;this.ProgramCodeForm.valid?this._UserSettingService.UpdateProgramCode(this.ProgramCodeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.GetProgramCode(),e.resetProgramCodeForm(),e.closeModal()):e._toastr.warning(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.ProgramCodeForm)},e.prototype.SetSampleBarcodeForm=function(){this.SampleBarcodeForm=this.formBuilder.group({ELNSampleBarcodeId:[\"\"],SampleBarcodeId:[\"\",l.l.required]})},e.prototype.resetSampleBarcodeForm=function(){this.SampleBarcodeForm.reset()},e.prototype.GetSampleBarcodeList=function(){var e=this;this._UserSettingService.GetSampleBarcodeId().subscribe((function(t){e.SampleBarcodeList=t.Object}))},e.prototype.SaveSampleBarcode=function(){var e=this;this.SampleBarcodeForm.valid?this._UserSettingService.SaveSampleBarcode(this.SampleBarcodeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetSampleBarcodeForm(),e.GetSampleBarcodeList(),e.closeModal()):e._toastr.error(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.SampleBarcodeForm)},e.prototype.EditSampleBarcode=function(e){var t=this;this._UserSettingService.GetSampleBarcodeDetail(e.rowData.Id).subscribe((function(e){var r=e.Object;null!=r?(t.SampleBarcodeForm.patchValue({ELNSampleBarcodeId:r.Id,SampleBarcodeId:r.Name}),t.IsEditMode=!0):t.SampleBarcodeForm.patchValue({ELNSampleBarcodeId:null,SampleBarcodeId:null})}))},e.prototype.UpdateSampleBarcode=function(){var e=this;this.SampleBarcodeForm.valid?this._UserSettingService.UpdateSampleBarcode(this.SampleBarcodeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetSampleBarcodeForm(),e.GetSampleBarcodeList(),e.closeModal()):e._toastr.warning(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.SampleBarcodeForm)},e.prototype.SetTestMaterialForm=function(){this.TestMaterialForm=this.formBuilder.group({ELNTestMaterialId:[\"\"],TestMaterialId:[\"\",l.l.required]})},e.prototype.resetTestMaterialForm=function(){this.TestMaterialForm.reset()},e.prototype.GetTestMaterialList=function(){var e=this;this._UserSettingService.GetTestMaterial().subscribe((function(t){e.TestMaterialList=t.Object}))},e.prototype.SaveTestMaterial=function(){var e=this;this.TestMaterialForm.valid?this._UserSettingService.SaveTestMaterial(this.TestMaterialForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetTestMaterialForm(),e.GetTestMaterialList(),e.closeModal()):e._toastr.error(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.TestMaterialForm)},e.prototype.EditTestMaterial=function(e){var t=this;this._UserSettingService.GetTestMaterialDetail(e.rowData.Id).subscribe((function(e){var r=e.Object;null!=r?(t.TestMaterialForm.patchValue({ELNTestMaterialId:r.Id,TestMaterialId:r.Name}),t.IsEditMode=!0):t.TestMaterialForm.patchValue({ELNTestMaterialId:null,TestMaterialId:null})}))},e.prototype.UpdateTestMaterial=function(){var e=this;this.TestMaterialForm.valid?this._UserSettingService.UpdateTestMaterial(this.TestMaterialForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetTestMaterialForm(),e.GetTestMaterialList(),e.closeModal()):e._toastr.warning(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.SampleBarcodeForm)},e.prototype.resetTestTypeForm=function(){this.TestTypeForm.reset()},e.prototype.SetTestTypeForm=function(){this.TestTypeForm=this.formBuilder.group({ELNTestTypeId:[\"\"],TestTypeId:[\"\",l.l.required]})},e.prototype.GetTestTypeList=function(){var e=this;this._UserSettingService.GetTestType().subscribe((function(t){e.TestTypeList=t.Object}))},e.prototype.SaveTestType=function(){var e=this;this.TestTypeForm.valid?this._UserSettingService.SaveTestType(this.TestTypeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetTestTypeForm(),e.GetTestTypeList(),e.closeModal()):e._toastr.error(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.TestTypeForm)},e.prototype.EditTestType=function(e){var t=this;this._UserSettingService.GetTestTypeDetail(e.rowData.Id).subscribe((function(e){var r=e.Object;null!=r?(t.TestTypeForm.patchValue({ELNTestTypeId:r.Id,TestTypeId:r.Name}),t.IsEditMode=!0):t.TestTypeForm.patchValue({ELNTestTypeId:null,TestTypeId:null})}))},e.prototype.UpdateTestType=function(){var e=this;this.TestTypeForm.valid?this._UserSettingService.UpdateTestType(this.TestTypeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetTestTypeForm(),e.GetTestTypeList(),e.closeModal()):e._toastr.warning(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.TestTypeForm)},e.prototype.resetTypeForm=function(){this.TypeForm.reset()},e.prototype.SetTypeForm=function(){this.TypeForm=this.formBuilder.group({ELNTypeId:[\"\"],TypeId:[\"\",l.l.required]})},e.prototype.GetTypeList=function(){var e=this;this._UserSettingService.GetType().subscribe((function(t){e.TypeList=t.Object}))},e.prototype.SaveType=function(){var e=this;this.TypeForm.valid?this._UserSettingService.SaveType(this.TypeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetTypeForm(),e.GetTypeList(),e.closeModal()):e._toastr.error(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.TypeForm)},e.prototype.EditType=function(e){var t=this;this._UserSettingService.GetTypeDetail(e.rowData.Id).subscribe((function(e){var r=e.Object;null!=r?(t.TypeForm.patchValue({ELNTypeId:r.Id,TypeId:r.Name}),t.IsEditMode=!0):t.TypeForm.patchValue({ELNTypeId:null,TypeId:null})}))},e.prototype.UpdateType=function(){var e=this;this.TypeForm.valid?this._UserSettingService.UpdateType(this.TypeForm.value).subscribe((function(t){t.Result?(e._toastr.success(t.ResultMessage),e.resetTypeForm(),e.GetTypeList(),e.closeModal()):e._toastr.warning(t.ResultMessage)})):this.formErrorDisplay.showErrors(this.TypeForm)},e.ctorParameters=function(){return[{type:i.c},{type:d.b},{type:l.c},{type:c.a},{type:p.a},{type:v}]},f([Object(s.ViewChild)(\"grid\",{static:!1}),y(\"design:type\",a.h)],e.prototype,\"grid\",void 0),e=f([Object(s.Component)({selector:\"app-qceln-user-settings\",template:b(r(\"TxqD\")).default,providers:[a.d,a.o,a.f],styles:[b(r(\"CVi5\")).default]}),y(\"design:paramtypes\",[i.c,d.b,l.c,c.a,p.a,v])],e)}(),S=function(e,t,r,s){var o,n=arguments.length,a=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,s);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(n<3?o(a):n>3?o(t,r,a):o(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a},M=[{path:\"\",data:{urls:[{title:\"Home\",url:\"/landing\"},{title:\"QC ELN\",url:\"/qcelnhome\"},{title:\"User Settings\"}]},component:T}],I=function(){function e(){}return e=S([Object(s.NgModule)({imports:[n.RouterModule.forChild(M)],exports:[n.RouterModule]})],e)}(),_=r(\"Cqot\"),E=r(\"1sLA\"),C=r(\"g0hO\");r.d(t,\"QCElnUserSettingsModule\",(function(){return F}));var P=function(e,t,r,s){var o,n=arguments.length,a=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,s);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(n<3?o(a):n>3?o(t,r,a):o(t,r))||a);return n>3&&a&&Object.defineProperty(t,r,a),a},F=function(){function e(){}return e=P([Object(s.NgModule)({declarations:[T],imports:[o.CommonModule,I,i.d,a.i,_.b,l.f,l.k,C.a],providers:[a.k,a.o,a.f,a.j,a.d,a.p,E.e,E.a,a.b,a.a,a.e,a.l]})],e)}()}}]);","extractedComments":[]}