{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns < this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns === this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, findChildrenRecords } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        if (isPrinting === true && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                actualResults.push(results[i]);\n                if (results[i].expanded === false) {\n                    i += findChildrenRecords(results[i]).length;\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","treeGridDetails","mapping_fields_missing","opt","field","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger"],"mappings":"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"}