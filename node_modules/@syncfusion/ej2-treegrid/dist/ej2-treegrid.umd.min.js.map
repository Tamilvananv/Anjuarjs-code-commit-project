{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns < this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns === this.parent.treeColumnIndex && this.parent.frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, findChildrenRecords } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        if (isPrinting === true && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                actualResults.push(results[i]);\n                if (results[i].expanded === false) {\n                    i += findChildrenRecords(results[i]).length;\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var indx = 'index';\n        var index = childRecords[0].parentItem.index;\n        if (this.enableImmutableMode && !this.allowPaging) {\n            var index_1 = this.getCurrentViewRecords().map(function (e) { return e[indx]; }).indexOf(record.index);\n            var children = findChildrenRecords(this.getCurrentViewRecords()[index_1]);\n            rows = [];\n            childRecords = children;\n            for (var i = 0; i < children.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(children[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                data = args.data[0][parentItem];\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","treeGridDetails","mapping_fields_missing","opt","field","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","parentrow","srcControl","targetIndex","isNaN","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","row_1","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"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ACI63B,WACDlb,EAAS7c,UAAW,qBAAiB,GACxCE,IACI63B,WACDlb,EAAS7c,UAAW,iBAAa,GACpCE,IACI63B,WACDlb,EAAS7c,UAAW,yBAAqB,GAC5CE,IACI63B,WACDlb,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI63B,WACDlb,EAAS7c,UAAW,yBAAqB,GAC5CE,IACI63B,WACDlb,EAAS7c,UAAW,oBAAgB,GACvCE,IACI63B,WACDlb,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI63B,WACDlb,EAAS7c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV6b,EAAS7c,UAAW,sBAAkB,GACzCE,IACI63B,WACDlb,EAAS7c,UAAW,oBAAgB,GACvCE,IACI63B,WACDlb,EAAS7c,UAAW,mBAAe,GACtCE,IACI63B,WACDlb,EAAS7c,UAAW,sBAAkB,GACzCE,IACI63B,WACDlb,EAAS7c,UAAW,qBAAiB,GACxCE,IACI63B,WACDlb,EAAS7c,UAAW,sBAAkB,GACzCE,IACI63B,WACDlb,EAAS7c,UAAW,qBAAiB,GACxCE,IACI63B,WACDlb,EAAS7c,UAAW,sBAAkB,GACzCE,IACI63B,WACDlb,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI63B,WACDlb,EAAS7c,UAAW,oBAAgB,GACvCE,IACI63B,WACDlb,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI63B,WACDlb,EAAS7c,UAAW,sBAAkB,GACzCE,IACI63B,WACDlb,EAAS7c,UAAW,mBAAe,GACtCE,IACI63B,WACDlb,EAAS7c,UAAW,gBAAY,GACnCE,IACI63B,WACDlb,EAAS7c,UAAW,kBAAc,GACrCE,IACI63B,WACDlb,EAAS7c,UAAW,uBAAmB,GAC1CE,IACI63B,WACDlb,EAAS7c,UAAW,kBAAc,GACrCE,IACI63B,WACDlb,EAAS7c,UAAW,kBAAc,GACrCE,IACI63B,WACDlb,EAAS7c,UAAW,sBAAkB,GACzCE,IACI63B,WACDlb,EAAS7c,UAAW,qBAAiB,GACxCE,IACI63B,WACDlb,EAAS7c,UAAW,mBAAe,GACtCE,IACI63B,WACDlb,EA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"}